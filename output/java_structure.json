{
  "topics": [
    {
      "id": "main-1",
      "title": "Java Basics",
      "subtopics": [
        {
          "id": "main-1-1",
          "title": "Variables and Data Types",
          "description": "Explaining the basic building blocks of Java programs including int, double, char, and boolean."
        },
        {
          "id": "main-1-2",
          "title": "Operators",
          "description": "Covering arithmetic, logical, and relational operators used in Java programming."
        },
        {
          "id": "main-1-3",
          "title": "Control Flow Statements",
          "description": "Introducing if-else, loops (for, while, do-while), and switch statements for program flow control."
        },
        {
          "id": "main-1-4",
          "title": "Methods",
          "description": "Defining methods, parameters, return types, and method overloading in Java functions."
        },
        {
          "id": "main-1-5",
          "title": "Classes and Objects",
          "description": "Detailing the creation of classes, objects, constructors, and instance variables in Java programming."
        }
      ]
    },
    {
      "id": "main-2",
      "title": "Object-Oriented Programming",
      "subtopics": [
        {
          "id": "main-2-1",
          "title": "Inheritance",
          "description": "Explaining how Java classes can inherit properties and behaviors from other classes."
        },
        {
          "id": "main-2-2",
          "title": "Polymorphism",
          "description": "Covering method overriding, dynamic method dispatch, and compile-time polymorphism in Java."
        },
        {
          "id": "main-2-3",
          "title": "Encapsulation",
          "description": "Discussing the concept of data hiding and access specifiers to achieve encapsulation in Java."
        },
        {
          "id": "main-2-4",
          "title": "Abstraction",
          "description": "Detailing abstract classes, interfaces, and abstract methods for achieving abstraction in Java programming."
        },
        {
          "id": "main-2-5",
          "title": "Class Relationships",
          "description": "Explaining associations, aggregations, and compositions between classes in Java."
        }
      ]
    },
    {
      "id": "main-3",
      "title": "Exception Handling",
      "subtopics": [
        {
          "id": "main-3-1",
          "title": "Try-Catch Blocks",
          "description": "Introducing try-catch blocks for handling exceptions and preventing program crashes."
        },
        {
          "id": "main-3-2",
          "title": "Throw and Throws",
          "description": "Explaining how to manually throw exceptions and declare checked exceptions using the 'throws' clause."
        },
        {
          "id": "main-3-3",
          "title": "Custom Exceptions",
          "description": "Teaching the creation of user-defined exceptions to handle specific error conditions in Java programs."
        },
        {
          "id": "main-3-4",
          "title": "Finally Block",
          "description": "Detailing the use of the 'finally' block to ensure cleanup code executes regardless of exceptions."
        }
      ]
    },
    {
      "id": "main-4",
      "title": "Collections",
      "subtopics": [
        {
          "id": "main-4-1",
          "title": "ArrayList",
          "description": "Detailing the implementation and usage of ArrayList for dynamically-sized arrays in Java."
        },
        {
          "id": "main-4-2",
          "title": "HashMap",
          "description": "Explaining how HashMap stores key-value pairs and its methods like put(), get(), and remove()."
        },
        {
          "id": "main-4-3",
          "title": "LinkedList",
          "description": "Covering the features of LinkedList and its differences from ArrayList in Java collections."
        },
        {
          "id": "main-4-4",
          "title": "HashSet",
          "description": "Introducing HashSet for storing unique elements and its common operations like add() and remove()."
        }
      ]
    },
    {
      "id": "main-5",
      "title": "File Handling",
      "subtopics": [
        {
          "id": "main-5-1",
          "title": "Reading and Writing Files",
          "description": "Teaching how to read from and write to text files using FileReader, FileWriter, BufferedReader, and BufferedWriter."
        },
        {
          "id": "main-5-2",
          "title": "File Input/Output Streams",
          "description": "Explaining FileInputStream and FileOutputStream for handling binary files in Java programs."
        },
        {
          "id": "main-5-3",
          "title": "Working with Directories",
          "description": "Covering directory creation, file listing, and file deletion operations in Java using File class."
        },
        {
          "id": "main-5-4",
          "title": "Serialization",
          "description": "Detailing object serialization and deserialization to convert Java objects into byte streams for storage or transmission."
        }
      ]
    },
    {
      "id": "main-6",
      "title": "Concurrency",
      "subtopics": [
        {
          "id": "main-6-1",
          "title": "Thread Basics",
          "description": "Explaining thread creation, starting, and running in Java for concurrent execution."
        },
        {
          "id": "main-6-2",
          "title": "Synchronization",
          "description": "Introducing synchronized blocks and methods to manage thread access and avoid data inconsistency."
        },
        {
          "id": "main-6-3",
          "title": "Thread Safety",
          "description": "Discussing thread safety concepts and techniques like using synchronized collections in Java programs."
        },
        {
          "id": "main-6-4",
          "title": "Executor Framework",
          "description": "Detailing the Executor interface and Executors class for task execution in a managed thread pool."
        },
        {
          "id": "main-6-5",
          "title": "Concurrency Utilities",
          "description": "Covering Java utilities like CountDownLatch, Semaphore, and CyclicBarrier for synchronization and coordination."
        }
      ]
    },
    {
      "id": "main-7",
      "title": "Networking",
      "subtopics": [
        {
          "id": "main-7-1",
          "title": "Client-Server Architecture",
          "description": "Explaining the client-server model and socket communication for network applications in Java."
        },
        {
          "id": "main-7-2",
          "title": "URL and HttpURLConnection",
          "description": "Detailing URL class for handling URLs and HttpURLConnection for making network requests in Java."
        },
        {
          "id": "main-7-3",
          "title": "Socket Programming",
          "description": "Introducing Socket and ServerSocket classes for creating network connections between applications."
        },
        {
          "id": "main-7-4",
          "title": "JSON Parsing",
          "description": "Teaching how to parse JSON data received over the network using libraries like Gson in Java."
        }
      ]
    }
  ]
}